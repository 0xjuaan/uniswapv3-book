<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Milestone 0. Introduction on Uniswap V3 Development Book</title><link>https://uniswapv3book.com/docs/introduction/</link><description>Recent content in Milestone 0. Introduction on Uniswap V3 Development Book</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://uniswapv3book.com/docs/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Markets</title><link>https://uniswapv3book.com/docs/introduction/introduction-to-markets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://uniswapv3book.com/docs/introduction/introduction-to-markets/</guid><description>Introduction to markets # How centralized exchanges work # In this book, we&amp;rsquo;ll build a decentralized exchange (DEX) that will run on Ethereum. There&amp;rsquo;re multiple approaches to how an exchange can be designed. All centralized exchanges have an order book at their core. An order book is just a journal that stores all sell and buy orders that traders want to make. Each order in this book contains a price the order must be executed at and the amount that must be bought or sold.</description></item><item><title>Constant Function Market Makers</title><link>https://uniswapv3book.com/docs/introduction/constant-function-market-maker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://uniswapv3book.com/docs/introduction/constant-function-market-maker/</guid><description>Constant Function Market Makers # This chapter retells the whitepaper of Uniswap V2. Understanding this math is crucial to build a Uniswap-like DEX, but it&amp;rsquo;s totally fine if you don&amp;rsquo;t understand everything at this stage.
As I mentioned in the previous section, there are different approaches to building AMM. We&amp;rsquo;ll be focusing on and building one specific type of AMM–Constant Function Market Maker. Don&amp;rsquo;t be scared by the long name!</description></item><item><title>Uniswap V3</title><link>https://uniswapv3book.com/docs/introduction/uniswap-v3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://uniswapv3book.com/docs/introduction/uniswap-v3/</guid><description>Introduction to Uniswap V3 # This chapter retells the whitepaper of Uniswap V3. Again, it&amp;rsquo;s totally ok if you don&amp;rsquo;t understand all the concepts. They will be clearer when converted to code.
To better understand the innovations Uniswap V3 brings, let&amp;rsquo;s first look at the imperfections of Uniswap V2.
Uniswap V2 is a general exchange that implements one AMM algorithm. However, not all trading pairs are equal. Pairs can be grouped by price volatility:</description></item><item><title>Development Environment</title><link>https://uniswapv3book.com/docs/introduction/dev-environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://uniswapv3book.com/docs/introduction/dev-environment/</guid><description>Development environment # We&amp;rsquo;re going to build two applications:
An on-chain one: a set of smart contracts deployed on Ethereum. An off-chain one: a front-end application that will interact with the smart contracts. While the front-end application development is part of this book, it won&amp;rsquo;t be our main focus. We will build it solely to demonstrate how smart contracts are integrated with front-end applications. Thus, the front-end application is optional, but I&amp;rsquo;ll still provide the code.</description></item><item><title>What We'll Build</title><link>https://uniswapv3book.com/docs/introduction/what-we-will-build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://uniswapv3book.com/docs/introduction/what-we-will-build/</guid><description>What We&amp;rsquo;ll Build # The goal of the book is to build a clone of Uniswap V3. However, we won&amp;rsquo;t build an exact copy. The main reason is that Uniswap is a big project with many nuances and auxiliary mechanics–breaking down all of them would bloat the book and make it harder for readers to finish it. Instead, we&amp;rsquo;ll build the core of Uniswap, its hardest and most important mechanisms.</description></item></channel></rss>