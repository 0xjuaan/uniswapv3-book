<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Uniswap V3 Development Book</title><link>https://jeiwan.net/uniswapv3-book/</link><description>Recent content in Introduction on Uniswap V3 Development Book</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jeiwan.net/uniswapv3-book/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to markets</title><link>https://jeiwan.net/uniswapv3-book/docs/introduction/amm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jeiwan.net/uniswapv3-book/docs/introduction/amm/</guid><description>Introduction to markets # How centralized exchanges work # In this book we&amp;rsquo;ll build a decentralized exchange (DEX) that will run on Ethereum. There&amp;rsquo;re multiple approaches to how an exchange can be designed. All centralized exchanges have an order book at their core. Order book is just a journal that stores all sell or buy orders that traders what to make. Each order in this book contains: a price the order must be executed at and the amount that must be bought or sold.</description></item><item><title>Constant Function Market Makers</title><link>https://jeiwan.net/uniswapv3-book/docs/introduction/cfmm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jeiwan.net/uniswapv3-book/docs/introduction/cfmm/</guid><description>Constant Function Market Makers # \[ \] As I mentioned in the previous section, there are different approach to building AMM. We&amp;rsquo;ll be focusing and building one specific type of AMM–Constant Function Market Maker. Don&amp;rsquo;t be scared by the long name! At its core is a very simply mathematical formula:
$$x * y = k$$
That&amp;rsquo;s it, that&amp;rsquo;s the formula.
\(x\) and \(y\) are pool contract reserves–the amount of tokens it current holds.</description></item></channel></rss>